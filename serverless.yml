service: micro-bots

frameworkVersion: "2"

provider:
  name: aws
  runtime: nodejs12.x
  region: eu-central-1
  stage: production
  iam:
    role:
      statements:
        - Effect: "Allow"
          Action:
            - "ses:SendEmail"
          Resource: "arn:aws:ses:eu-central-1:931595285256:identity/newcubator.com"
        - Effect: "Allow"
          Action:
            - "events:PutEvents"
          Resource:
            - "*"
  # https://www.serverless.com/framework/docs/deprecations/#LAMBDA_HASHING_VERSION_V2
  lambdaHashingVersion: 20201221
  eventBridge:
    # https://www.serverless.com/framework/docs/deprecations/#AWS_EVENT_BRIDGE_CUSTOM_RESOURCE
    useCloudFormation: true
  environment:
    COMPLETION_NOTICE_CHANNEL: ${env:COMPLETION_NOTICE_CHANNEL}
    EMPLOYEE_NAMES: ${env:EMPLOYEE_NAMES}
    HANNOVER_CHANNEL_ID: ${env:HANNOVER_CHANNEL_ID}
    MOCO_TOKEN: ${env:MOCO_TOKEN}
    SLACK_TOKEN: ${env:SLACK_TOKEN}
    WORKLOAD_CHANNEL: ${env:WORKLOAD_CHANNEL}
    WORKLOAD_PERCENTAGE: ${env:WORKLOAD_PERCENTAGE}

plugins:
  - serverless-esbuild

custom:
  esbuild:
    bundle: true
    sourcemap: true

functions:
  birthday:
    environment:
      LEAD_TIME: 21
    events:
      - schedule:
          enabled: true
          rate: cron(5 4 * * ? *)
    handler: src/functions/birthday.handler
    memorySize: 128
    timeout: 10

  ##
  ## Completion Notice
  ##

  completionNoticeCommand:
    handler: src/completion-notice/command-handler.commandHandler
    runtime: nodejs14.x
    timeout: 3
    events:
      - http:
          method: post
          path: completion-notice-command
  completionNoticeInteraction:
    handler: src/completion-notice/interaction-handler.interactionHandler
    runtime: nodejs14.x
    timeout: 3
    environment:
      EVENT_BUS: ${self:service}-${sls:stage}
    events:
      - http:
          method: post
          path: completion-notice-interaction
  completionNoticeEvent:
    handler: src/completion-notice/event-handler.eventHandler
    events:
      - eventBridge:
          eventBus: ${self:service}-${sls:stage}
          pattern:
            detail-type:
              - "CompletionNoticeRequestedEvent"

  eventApplication:
    events:
      - http:
          cors: true
          method: post
          path: eventApplication
    handler: src/functions/event-application.handler
    memorySize: 128
  lockProject:
    events:
      - http:
          method: post
          path: lockProject
    handler: src/functions/lock-project.handler
    memorySize: 128
  mailSignature:
    events:
      - http:
          method: post
          path: mailSignature
    handler: src/functions/mail-signature.handler
    memorySize: 128
  mailSignatureGenerator:
    events:
      - http:
          method: get
          path: mailSignatureGenerator
    handler: src/functions/mail-signature-generator.handler
    memorySize: 128
  privateChannel:
    events:
      - http:
          method: post
          path: privateChannel
    handler: src/functions/private-channel.handler
    memorySize: 128
  unlockProject:
    events:
      - http:
          method: post
          path: unlockProject
    handler: src/functions/unlock-project.handler
    memorySize: 128
  workload:
    events:
      - http:
          method: post
          path: workload
    handler: src/functions/workload.handler
    memorySize: 128
  workloadAll:
    events:
      - http:
          method: post
          path: workloadAll
      - schedule:
          enabled: true
          rate: cron(0 16 ? * FRI *)
    handler: src/functions/workload-all.handler
    memorySize: 128
